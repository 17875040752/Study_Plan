笔记来源 https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192

##################################第一部分：本地仓库的基本维护##############################
0、相关
<1>HEAD 当前指向的版本

1、基本环境配置
(1)登录
	git config [--global] user.name "name"
	git config [--global] user.email ""
	
(2)查看当前用户
	git config user.name
	git config user.email
	
2、创建本地的版本库
(1)git init 初始化仓库
(2)git add <file> 将工作区中的文件提交到缓冲区中
(3)git commit -m <msg> 将缓冲区中的文件提交到本地的把版本库中

3、本地版本库基本维护
<1>git log <--pretty=oneline> 查看提交的记录信息
	commit  commit_id     用于版本管理
	Author	name email
	Date    日期
	msg
<2>git reset --hard HEAD^ 回退到前一个版本
<3>git reset --hard commit_id
<4>git reflog 查看用户的历史修改记录。3<1>中的不能查看回退之后的，该命令可以查看所有的记录

4、工作区和暂存区
<1>git status 查看本地版本库的修改情况
<2>[工作区] --add--> [暂存区] --commit--> [本地库] --> [远程分支] -->[远程主干]
<3>git diff HEAD -- <file>

5、丢弃工作区总的内容 git checkout -- <file>
<1>工作区中的内容还没添加到暂存区，那么直接导致工作区中的内容和本版库一致
<2>工作区中的内容已经添加到暂存区域中，那么将会使工作区和暂存区域保持一致。
git rm --cached <file>清空暂存区

6、删除文件
<1>首先手动删除工作区中的文件
<2>git rm <file> 添加修改到缓冲区中
<3>git commit -m <msg> 确认删除本地本版库中的文件
<4>git checkout -- <file> 撤销删除


#######################################远程仓库维护#####################################
7、将本地仓库和远程仓库关联
git remote add origin <URL>
ssh-keygen -t rsa -C "邮箱地址"，然后将在~/.ssh/*.pub文件中的内容添加到远程ssh-key中

8、将本地内容推送到远程
git push origin master

9、分支管理
<1>创建并且切换到分支 git checkout -b <dev>
等同于：
git branch <dev>  
git checkout <dev>

<2>git branch 查看本地分支
<3>合并 git merge <目标>
说明：在当前分支上使用该命令后，当前分支和目标分支保持一致
<4>删除分支 git branch -d <dev> 
<5>查看修改图 git log --graph
<6>git merge --no-ff -m <msg> <dev> 这种合并方式将会产生一个新的提交信息
<7>暂存工作区
git stash
会将目前的工作区保存起来而不是放到暂存区中
git stash list 查看暂存工作区中的内容
git stash pop 将暂存工作区中的内容恢复到工作区中
<8>git branch -D <name> 其中大写的D表示强制删除
<9>创建远程分支的本地分支 git checkout -b dev origin/dev
<10>本地分支和远程分支关联
建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name
<11>将本修改提交到远程分支
git push origin <branch-name-local>












